---
sudo: required
dist: xenial

language: python
python:
  - "2.7"
  - "3.5"

env:
  - ANSIBLE_VERSION=latest
  - ANSIBLE_VERSION=2.10.2
  - ANSIBLE_VERSION=2.10.1
  - ANSIBLE_VERSION=2.10.0
  - ANSIBLE_VERSION=2.9.14
  - ANSIBLE_VERSION=2.9.13
  - ANSIBLE_VERSION=2.9.12
  - ANSIBLE_VERSION=2.9.11
  - ANSIBLE_VERSION=2.9.10
  - ANSIBLE_VERSION=2.9.9
  - ANSIBLE_VERSION=2.9.8
  - ANSIBLE_VERSION=2.9.7
  - ANSIBLE_VERSION=2.9.6
  - ANSIBLE_VERSION=2.9.5
  - ANSIBLE_VERSION=2.9.4
  - ANSIBLE_VERSION=2.9.3
  - ANSIBLE_VERSION=2.9.2
  - ANSIBLE_VERSION=2.9.1
  - ANSIBLE_VERSION=2.9.0
  - ANSIBLE_VERSION=2.8.16
  - ANSIBLE_VERSION=2.8.15
  - ANSIBLE_VERSION=2.8.14
  - ANSIBLE_VERSION=2.8.13
  - ANSIBLE_VERSION=2.8.12
  - ANSIBLE_VERSION=2.8.11
  - ANSIBLE_VERSION=2.8.10
  - ANSIBLE_VERSION=2.8.9
  - ANSIBLE_VERSION=2.8.8
  - ANSIBLE_VERSION=2.8.7
  - ANSIBLE_VERSION=2.8.6
  - ANSIBLE_VERSION=2.8.5
  - ANSIBLE_VERSION=2.8.4
  - ANSIBLE_VERSION=2.8.3
  - ANSIBLE_VERSION=2.8.2
  - ANSIBLE_VERSION=2.8.1
  - ANSIBLE_VERSION=2.8.0

branches:
  only:
    - master

before_install:
  - sudo apt-get update -qq

install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible; else pip install ansible==$ANSIBLE_VERSION; fi
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible-lint; fi

script:
  # Check the role/playbook's syntax.
  - ansible-playbook -i tests/inventory tests/test.yml --syntax-check

  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i tests/inventory tests/test.yml -vvvv

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  - if [ "$ANSIBLE_VERSION" = "latest" ]; then ansible-lint tests/test.yml; fi

notifications:
  email: false
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    rooms:
      secure: "vShbmiJdLSb4MVCKC08xQAEA4cQ65qbbTBSDnB1XexPddJr9GanNymBMuJQGlVWpwFd5AGO3oPgkctyauZh+AqmMD8xAwyi2m7m9IX/CU5Fg3CuAl3gTDdhsz+i3yEKDO0QWw6AoajsOjrYnBjRkQh1Clfqnn+wDnUNVAOqHXYEWwK6HNPdWg+C5GtmUs2KgNS0faq8XMi2ueVEJsjSxgZzi60Gh6nYewmepvFZeyy9ygmqs0IxT/3tZLRMjW97WOP8bI487JR749fhGvsVAnU8b7xyIT5cevEdZSwF7hOoqeiXd2DudTrUFOf7vl7/dP7fT3LiAm7srx/WfjwAseq2zOqXgVRI0D3X9L8ZnqCNuyu+3s7kIJ7s7TJ3tpl4Ky3agMnYNmLLGzSuYm7ObIIRuI34QtLX/bAOZp0RUXadtUvDnPWofg7k1ULMpPV6xopbvxkMiZ1K59YPksZZec2im+3t3UcfIJgdOR7ceKJ0lUK71MJSk00yux0Lyxp2AuiQoiR1IrhZZj3vDRUqVxuO9TBegjxHRPL61snYTB9mC84VGk2FOWZFPYnO4yKZX+ymhEfoT3p7QVGH/Ja3qxCkeJ595McJjFD3OD4arovsjmZVm7TjTW1OKLDQ+nE1fc/w7pJACQpcmhkro3EmDRh+V2LN2RMK3YOaQQZRW7tA="
